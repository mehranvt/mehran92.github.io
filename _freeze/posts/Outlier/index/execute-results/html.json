{
  "hash": "bbcda80ed56b5918b4d706b495058ce1",
  "result": {
    "markdown": "---\ntitle: \"Outlier\"\nauthor: \"Mehran Islam\"\ndate: \"2023-12-07\"\ncategories: [code, analysis]\nimage: \"image.jpg\"\n---\n\nImporting libraries\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as pl\nimport seaborn as sns\n```\n:::\n\n\nRead the data\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport pandas as pd\n\n# Read the data\ndata = pd.read_csv('Cricket_data.txt', sep='\\t')\n\n# Display the first few rows of the data\ndata\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Player</th>\n      <th>Span</th>\n      <th>Mat</th>\n      <th>Inn</th>\n      <th>NO</th>\n      <th>Runs</th>\n      <th>HS</th>\n      <th>Avg</th>\n      <th>100</th>\n      <th>50</th>\n      <th>0</th>\n      <th>Player Profile</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>SR Tendulkar (INDIA)</td>\n      <td>1989-2013</td>\n      <td>200</td>\n      <td>329</td>\n      <td>33</td>\n      <td>15921</td>\n      <td>248*</td>\n      <td>53.78</td>\n      <td>51</td>\n      <td>68</td>\n      <td>14</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>RT Ponting (AUS)</td>\n      <td>1995-2012</td>\n      <td>168</td>\n      <td>287</td>\n      <td>29</td>\n      <td>13378</td>\n      <td>257</td>\n      <td>51.85</td>\n      <td>41</td>\n      <td>62</td>\n      <td>17</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>JH Kallis (ICC/SA)</td>\n      <td>1995-2013</td>\n      <td>166</td>\n      <td>280</td>\n      <td>40</td>\n      <td>13289</td>\n      <td>224</td>\n      <td>55.37</td>\n      <td>45</td>\n      <td>58</td>\n      <td>16</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>R Dravid (ICC/INDIA)</td>\n      <td>1996-2012</td>\n      <td>164</td>\n      <td>286</td>\n      <td>32</td>\n      <td>13288</td>\n      <td>270</td>\n      <td>52.31</td>\n      <td>36</td>\n      <td>63</td>\n      <td>8</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AN Cook (ENG)</td>\n      <td>2006-2018</td>\n      <td>161</td>\n      <td>291</td>\n      <td>16</td>\n      <td>12472</td>\n      <td>294</td>\n      <td>45.35</td>\n      <td>33</td>\n      <td>57</td>\n      <td>9</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2996</th>\n      <td>CA Snedden (NZ)</td>\n      <td>1947-1947</td>\n      <td>1</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>2997</th>\n      <td>VN Swamy (INDIA)</td>\n      <td>1955-1955</td>\n      <td>1</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>2998</th>\n      <td>Usman Shinwari (PAK)</td>\n      <td>2019-2019</td>\n      <td>1</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>2999</th>\n      <td>CM Willoughby (SA)</td>\n      <td>2003-2003</td>\n      <td>2</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>3000</th>\n      <td>JW Wilson (AUS)</td>\n      <td>1956-1956</td>\n      <td>1</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n  </tbody>\n</table>\n<p>3001 rows × 12 columns</p>\n</div>\n```\n:::\n:::\n\n\nIdentify null data\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndata.apply(pd.isnull).sum()/data.shape[0]\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nPlayer            0.0\nSpan              0.0\nMat               0.0\nInn               0.0\nNO                0.0\nRuns              0.0\nHS                0.0\nAvg               0.0\n100               0.0\n50                0.0\n0                 0.0\nPlayer Profile    0.0\ndtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndata.describe(include='object')\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Player</th>\n      <th>Span</th>\n      <th>Inn</th>\n      <th>NO</th>\n      <th>Runs</th>\n      <th>HS</th>\n      <th>Avg</th>\n      <th>100</th>\n      <th>50</th>\n      <th>0</th>\n      <th>Player Profile</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>3001</td>\n      <td>3001</td>\n      <td>3001</td>\n      <td>3001</td>\n      <td>3001</td>\n      <td>3001</td>\n      <td>3001</td>\n      <td>3001</td>\n      <td>3001</td>\n      <td>3001</td>\n      <td>3001</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>2995</td>\n      <td>1140</td>\n      <td>198</td>\n      <td>49</td>\n      <td>1188</td>\n      <td>465</td>\n      <td>1598</td>\n      <td>40</td>\n      <td>57</td>\n      <td>35</td>\n      <td>3001</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>Imran Khan (PAK)</td>\n      <td>2019-2019</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>-</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>http://stats.espncricinfo.com/ci/content/playe...</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>2</td>\n      <td>45</td>\n      <td>374</td>\n      <td>953</td>\n      <td>52</td>\n      <td>40</td>\n      <td>88</td>\n      <td>2203</td>\n      <td>1619</td>\n      <td>854</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ncricket=data[[\"Player\",\"Span\",\"Mat\",\"Inn\",\"Runs\",\"Avg\",\"100\",\"50\"]].copy()\ncricket.columns=[\"player\",\"span\",\"mat\",\"inn\",\"runs\",\"avg\",\"100\",\"50\"]\ncricket.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>player</th>\n      <th>span</th>\n      <th>mat</th>\n      <th>inn</th>\n      <th>runs</th>\n      <th>avg</th>\n      <th>100</th>\n      <th>50</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>SR Tendulkar (INDIA)</td>\n      <td>1989-2013</td>\n      <td>200</td>\n      <td>329</td>\n      <td>15921</td>\n      <td>53.78</td>\n      <td>51</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>RT Ponting (AUS)</td>\n      <td>1995-2012</td>\n      <td>168</td>\n      <td>287</td>\n      <td>13378</td>\n      <td>51.85</td>\n      <td>41</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>JH Kallis (ICC/SA)</td>\n      <td>1995-2013</td>\n      <td>166</td>\n      <td>280</td>\n      <td>13289</td>\n      <td>55.37</td>\n      <td>45</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>R Dravid (ICC/INDIA)</td>\n      <td>1996-2012</td>\n      <td>164</td>\n      <td>286</td>\n      <td>13288</td>\n      <td>52.31</td>\n      <td>36</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AN Cook (ENG)</td>\n      <td>2006-2018</td>\n      <td>161</td>\n      <td>291</td>\n      <td>12472</td>\n      <td>45.35</td>\n      <td>33</td>\n      <td>57</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nconverting to numerical int data\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# Convert the 'runs' column to a numeric data type (int)\ncricket['runs'] = cricket['runs'].str.replace(',', '', regex=True).str.extract('(\\d+)').astype(float)\n\n# Filter the data to select players with more than 5000 runs\nbatsman = cricket[cricket['runs'] > 2000]\n\n# Display the filtered data in column form\nbatsman.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>player</th>\n      <th>span</th>\n      <th>mat</th>\n      <th>inn</th>\n      <th>runs</th>\n      <th>avg</th>\n      <th>100</th>\n      <th>50</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>SR Tendulkar (INDIA)</td>\n      <td>1989-2013</td>\n      <td>200</td>\n      <td>329</td>\n      <td>15921.0</td>\n      <td>53.78</td>\n      <td>51</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>RT Ponting (AUS)</td>\n      <td>1995-2012</td>\n      <td>168</td>\n      <td>287</td>\n      <td>13378.0</td>\n      <td>51.85</td>\n      <td>41</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>JH Kallis (ICC/SA)</td>\n      <td>1995-2013</td>\n      <td>166</td>\n      <td>280</td>\n      <td>13289.0</td>\n      <td>55.37</td>\n      <td>45</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>R Dravid (ICC/INDIA)</td>\n      <td>1996-2012</td>\n      <td>164</td>\n      <td>286</td>\n      <td>13288.0</td>\n      <td>52.31</td>\n      <td>36</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AN Cook (ENG)</td>\n      <td>2006-2018</td>\n      <td>161</td>\n      <td>291</td>\n      <td>12472.0</td>\n      <td>45.35</td>\n      <td>33</td>\n      <td>57</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# Use .loc to update the 'Player' column\nbatsman.loc[:, 'player'] = batsman['player'].str.replace(r'\\s*\\(.*\\)', '', regex=True)\n\n# Display the DataFrame with the country names removed\n\nbatsman.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>player</th>\n      <th>span</th>\n      <th>mat</th>\n      <th>inn</th>\n      <th>runs</th>\n      <th>avg</th>\n      <th>100</th>\n      <th>50</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>308</th>\n      <td>CJL Rogers</td>\n      <td>2008-2015</td>\n      <td>25</td>\n      <td>48</td>\n      <td>2015.0</td>\n      <td>42.87</td>\n      <td>5</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>309</th>\n      <td>KOA Powell</td>\n      <td>2011-2018</td>\n      <td>40</td>\n      <td>76</td>\n      <td>2011.0</td>\n      <td>26.81</td>\n      <td>3</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>310</th>\n      <td>AC Hudson</td>\n      <td>1992-1998</td>\n      <td>35</td>\n      <td>63</td>\n      <td>2007.0</td>\n      <td>33.45</td>\n      <td>4</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>311</th>\n      <td>KL Rahul</td>\n      <td>2014-2019</td>\n      <td>36</td>\n      <td>60</td>\n      <td>2006.0</td>\n      <td>34.58</td>\n      <td>5</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>312</th>\n      <td>DN Sardesai</td>\n      <td>1961-1972</td>\n      <td>30</td>\n      <td>55</td>\n      <td>2001.0</td>\n      <td>39.23</td>\n      <td>5</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# List of names to delete\nnames_to_delete = ['SR Tendulkar', 'DG Bradman']\n\n# Filter out rows with the specified names\nbatsman = batsman[~batsman['player'].isin(names_to_delete)]\n\nbatsman.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>player</th>\n      <th>span</th>\n      <th>mat</th>\n      <th>inn</th>\n      <th>runs</th>\n      <th>avg</th>\n      <th>100</th>\n      <th>50</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>RT Ponting</td>\n      <td>1995-2012</td>\n      <td>168</td>\n      <td>287</td>\n      <td>13378.0</td>\n      <td>51.85</td>\n      <td>41</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>JH Kallis</td>\n      <td>1995-2013</td>\n      <td>166</td>\n      <td>280</td>\n      <td>13289.0</td>\n      <td>55.37</td>\n      <td>45</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>R Dravid</td>\n      <td>1996-2012</td>\n      <td>164</td>\n      <td>286</td>\n      <td>13288.0</td>\n      <td>52.31</td>\n      <td>36</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AN Cook</td>\n      <td>2006-2018</td>\n      <td>161</td>\n      <td>291</td>\n      <td>12472.0</td>\n      <td>45.35</td>\n      <td>33</td>\n      <td>57</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>KC Sangakkara</td>\n      <td>2000-2015</td>\n      <td>134</td>\n      <td>233</td>\n      <td>12400.0</td>\n      <td>57.4</td>\n      <td>38</td>\n      <td>52</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n#to save the players name for future \nplayer = batsman['player'].tolist()\n```\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# Split the 'span' values into start and end years\nbatsman[['Start_Year', 'End_Year']] = batsman['span'].str.split('-', expand=True).astype(int)\n\n# Calculate the duration in years\nbatsman['Span_yrs'] = batsman['End_Year'] - batsman['Start_Year'] + 1  # Adding 1 to include both start and end years\n\n# Display the DataFrame with the duration calculated\nbatsman\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>player</th>\n      <th>span</th>\n      <th>mat</th>\n      <th>inn</th>\n      <th>runs</th>\n      <th>avg</th>\n      <th>100</th>\n      <th>50</th>\n      <th>Start_Year</th>\n      <th>End_Year</th>\n      <th>Span_yrs</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>RT Ponting</td>\n      <td>1995-2012</td>\n      <td>168</td>\n      <td>287</td>\n      <td>13378.0</td>\n      <td>51.85</td>\n      <td>41</td>\n      <td>62</td>\n      <td>1995</td>\n      <td>2012</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>JH Kallis</td>\n      <td>1995-2013</td>\n      <td>166</td>\n      <td>280</td>\n      <td>13289.0</td>\n      <td>55.37</td>\n      <td>45</td>\n      <td>58</td>\n      <td>1995</td>\n      <td>2013</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>R Dravid</td>\n      <td>1996-2012</td>\n      <td>164</td>\n      <td>286</td>\n      <td>13288.0</td>\n      <td>52.31</td>\n      <td>36</td>\n      <td>63</td>\n      <td>1996</td>\n      <td>2012</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AN Cook</td>\n      <td>2006-2018</td>\n      <td>161</td>\n      <td>291</td>\n      <td>12472.0</td>\n      <td>45.35</td>\n      <td>33</td>\n      <td>57</td>\n      <td>2006</td>\n      <td>2018</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>KC Sangakkara</td>\n      <td>2000-2015</td>\n      <td>134</td>\n      <td>233</td>\n      <td>12400.0</td>\n      <td>57.4</td>\n      <td>38</td>\n      <td>52</td>\n      <td>2000</td>\n      <td>2015</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>308</th>\n      <td>CJL Rogers</td>\n      <td>2008-2015</td>\n      <td>25</td>\n      <td>48</td>\n      <td>2015.0</td>\n      <td>42.87</td>\n      <td>5</td>\n      <td>14</td>\n      <td>2008</td>\n      <td>2015</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>309</th>\n      <td>KOA Powell</td>\n      <td>2011-2018</td>\n      <td>40</td>\n      <td>76</td>\n      <td>2011.0</td>\n      <td>26.81</td>\n      <td>3</td>\n      <td>6</td>\n      <td>2011</td>\n      <td>2018</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>310</th>\n      <td>AC Hudson</td>\n      <td>1992-1998</td>\n      <td>35</td>\n      <td>63</td>\n      <td>2007.0</td>\n      <td>33.45</td>\n      <td>4</td>\n      <td>13</td>\n      <td>1992</td>\n      <td>1998</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>311</th>\n      <td>KL Rahul</td>\n      <td>2014-2019</td>\n      <td>36</td>\n      <td>60</td>\n      <td>2006.0</td>\n      <td>34.58</td>\n      <td>5</td>\n      <td>11</td>\n      <td>2014</td>\n      <td>2019</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>312</th>\n      <td>DN Sardesai</td>\n      <td>1961-1972</td>\n      <td>30</td>\n      <td>55</td>\n      <td>2001.0</td>\n      <td>39.23</td>\n      <td>5</td>\n      <td>9</td>\n      <td>1961</td>\n      <td>1972</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n<p>311 rows × 11 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n#sns.pairplot(batsman)\n#pl.show()\n```\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nbatsman = batsman.drop(['player'], axis = 1)\nbatsman.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>span</th>\n      <th>mat</th>\n      <th>inn</th>\n      <th>runs</th>\n      <th>avg</th>\n      <th>100</th>\n      <th>50</th>\n      <th>Start_Year</th>\n      <th>End_Year</th>\n      <th>Span_yrs</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>1995-2012</td>\n      <td>168</td>\n      <td>287</td>\n      <td>13378.0</td>\n      <td>51.85</td>\n      <td>41</td>\n      <td>62</td>\n      <td>1995</td>\n      <td>2012</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1995-2013</td>\n      <td>166</td>\n      <td>280</td>\n      <td>13289.0</td>\n      <td>55.37</td>\n      <td>45</td>\n      <td>58</td>\n      <td>1995</td>\n      <td>2013</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1996-2012</td>\n      <td>164</td>\n      <td>286</td>\n      <td>13288.0</td>\n      <td>52.31</td>\n      <td>36</td>\n      <td>63</td>\n      <td>1996</td>\n      <td>2012</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2006-2018</td>\n      <td>161</td>\n      <td>291</td>\n      <td>12472.0</td>\n      <td>45.35</td>\n      <td>33</td>\n      <td>57</td>\n      <td>2006</td>\n      <td>2018</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2000-2015</td>\n      <td>134</td>\n      <td>233</td>\n      <td>12400.0</td>\n      <td>57.4</td>\n      <td>38</td>\n      <td>52</td>\n      <td>2000</td>\n      <td>2015</td>\n      <td>16</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\ncolumns=[\"runs\",\"avg\",\"100\"]\n```\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.decomposition import PCA\n\n# Initialize PCA with the number of components you want to retain\nn_components = 2  # Adjust as needed\npca = PCA(n_components=n_components)\n\n# Initialize the MinMaxScaler\nscaler = MinMaxScaler()\n\n# Apply Min-Max scaling to your data\nscaled_data = scaler.fit_transform(batsman[columns])\n\n# Fit and transform PCA on the scaled data\nbatter = pca.fit_transform(scaled_data)\n\nbatter\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\narray([[ 1.03695410e+00, -2.69940761e-01],\n       [ 1.12062664e+00, -2.12675013e-01],\n       [ 9.72643357e-01, -2.41727294e-01],\n       [ 8.12777697e-01, -3.26136693e-01],\n       [ 1.00133191e+00, -1.13313620e-01],\n       [ 8.76027429e-01, -1.65416432e-01],\n       [ 8.03714570e-01, -1.77324674e-01],\n       [ 8.35535348e-01, -2.16051623e-01],\n       [ 7.16629780e-01, -1.52257191e-01],\n       [ 7.71731820e-01, -1.47529266e-01],\n       [ 7.51496323e-01, -1.16826152e-01],\n       [ 7.60099920e-01, -9.84197453e-02],\n       [ 5.78313905e-01, -1.44447188e-01],\n       [ 5.81720742e-01, -1.10475759e-01],\n       [ 4.10454723e-01, -1.78356682e-01],\n       [ 5.51630093e-01,  2.02856905e-03],\n       [ 5.45407348e-01, -5.96393461e-02],\n       [ 4.01370162e-01, -1.00331450e-01],\n       [ 5.14558283e-01, -2.75678222e-02],\n       [ 5.67684501e-01, -7.00287954e-02],\n       [ 6.09662762e-01, -4.50051328e-02],\n       [ 5.02929967e-01, -4.73960233e-02],\n       [ 5.22583395e-01, -3.18357048e-02],\n       [ 2.88727946e-01, -2.00119529e-01],\n       [ 3.64045829e-01, -1.11125154e-01],\n       [ 4.57542834e-01, -6.78757801e-02],\n       [ 4.45567474e-01, -5.35478544e-02],\n       [ 5.99487129e-01,  1.25646805e-01],\n       [ 3.51933656e-01, -1.53985937e-01],\n       [ 2.39332032e-01, -2.05109852e-01],\n       [ 3.69502154e-01, -1.30341543e-01],\n       [ 4.08069878e-01, -8.38606584e-02],\n       [ 3.78184869e-01, -1.00150691e-01],\n       [ 3.43006322e-01, -7.55111423e-02],\n       [ 4.86257974e-01,  5.16171859e-02],\n       [ 3.27965069e-01, -9.70326853e-02],\n       [ 3.61347897e-01, -3.71496336e-02],\n       [ 3.00150266e-01, -1.14648941e-01],\n       [ 3.49336173e-01, -9.57022464e-02],\n       [ 3.45310967e-01,  8.55973620e-03],\n       [ 3.58956301e-01, -5.95034750e-02],\n       [ 5.10205303e-01,  1.85504652e-01],\n       [ 2.44794917e-01, -9.51892914e-02],\n       [ 2.57377824e-01, -9.84092269e-02],\n       [ 5.34353047e-01,  1.06940810e-01],\n       [ 1.42898156e-01, -1.14213277e-01],\n       [ 6.03399858e-01,  2.58853727e-01],\n       [ 3.38367599e-01, -2.13239846e-02],\n       [ 4.78770635e-01,  9.96540401e-02],\n       [ 4.04356726e-01, -1.85011346e-03],\n       [ 2.97842037e-01, -1.29782098e-01],\n       [ 1.95539194e-01, -1.20780230e-01],\n       [ 4.36726719e-01,  1.73972519e-01],\n       [ 2.49890744e-01, -8.69695367e-02],\n       [ 4.61362275e-01,  2.15576042e-01],\n       [ 2.56943603e-01, -3.10402788e-02],\n       [ 1.24628706e-01, -1.18122510e-01],\n       [ 3.72297707e-01,  9.63198443e-02],\n       [ 2.67999048e-01, -5.80715056e-02],\n       [ 3.39226040e-01,  1.10467776e-01],\n       [ 2.44932715e-01,  4.87340514e-02],\n       [ 3.07177760e-01, -1.93141179e-02],\n       [ 1.69071959e-01, -4.97705669e-02],\n       [ 3.26657407e-01,  4.99214279e-02],\n       [ 1.63834349e-01, -4.62725445e-02],\n       [ 2.08151008e-01, -7.06237100e-04],\n       [ 1.85766330e-01, -3.05675800e-02],\n       [ 1.42391333e-01, -7.46897299e-02],\n       [ 1.68972338e-01, -1.58399635e-04],\n       [ 2.73307932e-01,  1.08470393e-01],\n       [ 1.77417998e-01, -2.61282404e-03],\n       [ 9.48593095e-02, -1.20992480e-01],\n       [ 7.42494950e-02, -1.31239104e-01],\n       [ 2.76050035e-01,  9.74892335e-02],\n       [ 1.88975445e-01, -5.18534205e-02],\n       [ 9.88132770e-02,  2.23320355e-02],\n       [ 2.33350625e-01,  7.30374883e-02],\n       [-1.08240404e-01, -2.10408152e-01],\n       [ 1.24989870e-01, -8.11846944e-02],\n       [ 1.45343902e-01, -4.41049051e-02],\n       [ 2.01086357e-01,  1.08891803e-01],\n       [ 2.02152732e-01,  3.67767048e-02],\n       [ 2.98245689e-01,  2.60977984e-01],\n       [ 2.02488406e-01,  1.01097090e-01],\n       [ 1.26622896e-01, -4.40343071e-03],\n       [ 5.12523207e-02, -8.36493380e-02],\n       [ 1.29095762e-01,  4.72859215e-03],\n       [-7.72338666e-02, -1.93873285e-01],\n       [ 1.57921020e-01,  9.20679126e-02],\n       [ 1.13152416e-01,  9.20617195e-02],\n       [ 2.34169850e-02, -1.63928198e-01],\n       [ 1.01019658e-01,  3.19870990e-02],\n       [-8.71603846e-02, -8.82939275e-02],\n       [ 1.09980032e-01,  5.87334000e-02],\n       [ 8.24017777e-02,  6.22027567e-02],\n       [-4.91437303e-02, -3.94877019e-02],\n       [ 9.47966632e-02,  1.11322953e-01],\n       [ 1.66589278e-01,  1.96826058e-01],\n       [ 2.56810355e-02,  6.06391137e-02],\n       [-6.59269521e-03, -6.73537491e-02],\n       [ 1.92347234e-02, -9.20554752e-02],\n       [ 3.02151567e-01,  3.66746500e-01],\n       [ 1.00060731e-01,  6.42564644e-02],\n       [ 4.68151045e-02,  4.89768884e-02],\n       [ 1.13612942e-01,  1.15984532e-01],\n       [-1.55462440e-01, -1.75345626e-01],\n       [ 1.76299278e-02, -2.51627784e-02],\n       [ 7.23318643e-02,  1.50964440e-01],\n       [ 2.60931432e-01,  3.34693588e-01],\n       [-5.03523821e-02, -5.19684831e-02],\n       [-4.46116426e-02, -4.10474759e-02],\n       [-5.20165046e-02, -7.86681131e-02],\n       [ 1.01776298e-01,  1.14338074e-01],\n       [ 6.78489514e-02,  8.15107082e-02],\n       [-1.47099579e-01, -1.14503232e-01],\n       [ 3.32199349e-02,  4.94933098e-02],\n       [-2.19051701e-01, -2.10097395e-01],\n       [-7.84332820e-03,  6.06306675e-02],\n       [-3.29268487e-02, -7.78594359e-03],\n       [-9.49732882e-02, -8.51695311e-02],\n       [-7.17511886e-03,  2.16503896e-02],\n       [ 1.19042440e-02,  8.39256407e-02],\n       [-1.19748304e-01, -6.61085582e-02],\n       [ 3.64614668e-02,  1.08359831e-01],\n       [-1.11995067e-02,  5.54261054e-02],\n       [-4.19264601e-02, -1.80637938e-02],\n       [ 3.11015116e-02,  8.45084553e-02],\n       [-5.88884348e-02,  3.10344656e-02],\n       [ 4.66458937e-02,  1.20449028e-01],\n       [-1.33773810e-01, -6.44528491e-02],\n       [-2.19096508e-02, -1.48820035e-02],\n       [-6.92407695e-02,  1.18381927e-02],\n       [-1.49920684e-01, -1.01797448e-01],\n       [ 3.50935127e-02,  9.46395959e-02],\n       [-1.06514841e-01,  3.32468372e-02],\n       [ 5.22381923e-02,  2.09255002e-01],\n       [-9.78291636e-03,  5.16745495e-02],\n       [-1.88979911e-01, -1.08610441e-01],\n       [-6.87392895e-03,  1.09435129e-01],\n       [-7.00840055e-02, -5.15364516e-02],\n       [-1.15147424e-01,  6.10574957e-04],\n       [-3.87481938e-02,  5.88888277e-02],\n       [ 2.02380272e-01,  3.27858691e-01],\n       [-1.11730282e-01, -4.15650698e-02],\n       [-2.25324485e-01, -8.63028446e-02],\n       [-1.71844965e-01, -3.64910562e-02],\n       [-1.34187486e-01, -1.91752891e-02],\n       [-3.69540233e-02,  4.78861428e-03],\n       [-1.71381849e-02,  6.51502178e-02],\n       [-7.34114562e-02, -5.91399378e-03],\n       [-5.75917923e-02,  2.30840761e-02],\n       [-2.83006076e-01, -1.91247239e-01],\n       [ 3.33339638e-02,  1.58437139e-01],\n       [-1.02383908e-04,  7.43822169e-02],\n       [-7.87809311e-02,  4.09968178e-02],\n       [ 2.95669284e-02,  1.54609915e-01],\n       [-7.22870987e-02,  5.48372246e-02],\n       [-5.21308086e-02,  1.70071317e-02],\n       [-1.10533170e-02,  9.19588622e-02],\n       [ 3.97323609e-02,  1.58368114e-01],\n       [-1.24743515e-02,  1.95829181e-01],\n       [-1.06918998e-01,  7.76221043e-03],\n       [-1.54485568e-01, -7.40340240e-02],\n       [ 1.05616595e-02,  2.18474363e-01],\n       [-2.22395631e-01, -1.36146301e-01],\n       [-1.81489531e-01, -8.87753841e-02],\n       [-1.84129573e-01, -6.49506023e-02],\n       [-1.08919850e-01,  4.34782382e-02],\n       [-2.07659712e-01, -9.95826726e-02],\n       [-1.64317391e-01, -9.90157199e-02],\n       [-2.17366307e-01, -8.21573550e-02],\n       [-2.00501651e-01, -5.23493411e-02],\n       [-6.69415558e-02,  3.40052099e-03],\n       [-1.75512781e-01, -3.22704912e-03],\n       [-1.09635740e-01,  6.26057227e-02],\n       [-2.22298842e-01, -5.71042539e-02],\n       [-1.63148473e-01,  2.27804526e-02],\n       [-4.32843292e-02,  1.57131884e-01],\n       [-1.21661458e-01,  5.08748426e-02],\n       [-6.42527385e-02,  1.01158312e-01],\n       [-9.27412577e-02,  5.58099383e-02],\n       [-1.12309242e-01,  4.82601944e-02],\n       [-4.20840435e-01, -3.12271903e-01],\n       [-4.47225795e-01, -3.32335854e-01],\n       [-3.18263120e-01, -1.53323402e-01],\n       [-1.46827777e-01,  4.57550492e-02],\n       [-1.50968466e-01,  6.53520474e-02],\n       [-8.50566189e-02,  1.30081139e-01],\n       [-3.63418800e-01, -2.01726736e-01],\n       [-1.15874799e-02,  1.86579304e-01],\n       [-1.93458784e-01, -2.31894059e-03],\n       [-2.71496818e-01, -8.27396961e-02],\n       [-1.22931353e-01,  1.02718820e-01],\n       [-1.46026682e-01,  9.08879159e-02],\n       [-7.52426834e-02,  1.63707623e-01],\n       [-1.47984015e-01,  4.04703515e-02],\n       [ 4.65070861e-02,  3.30241476e-01],\n       [-1.59058886e-01,  2.18147607e-02],\n       [-1.19747836e-01,  9.38204034e-02],\n       [-8.31786090e-02,  1.59862655e-01],\n       [-3.19479989e-01, -1.73621212e-01],\n       [-3.66779452e-01, -2.30871752e-01],\n       [-1.10946990e-01,  9.08230352e-02],\n       [-2.50881443e-01, -5.12294442e-02],\n       [-3.42617513e-01, -1.58245126e-01],\n       [-1.59088411e-01,  6.11266203e-02],\n       [-3.33089958e-01, -1.40550783e-01],\n       [-2.43954898e-01, -3.50303738e-02],\n       [-2.85195092e-01, -5.30848455e-02],\n       [-2.10513258e-01,  2.47873542e-03],\n       [-2.14036128e-01,  2.21380297e-02],\n       [-1.62973038e-01,  3.69459014e-02],\n       [-2.03391840e-01, -6.22392014e-03],\n       [-1.38643396e-01,  1.07828000e-01],\n       [-2.80267536e-01, -1.13638065e-01],\n       [-9.05721250e-02,  1.93273490e-01],\n       [-2.01752757e-01, -1.02596874e-03],\n       [-1.24685642e-01,  1.85071930e-01],\n       [-4.75762876e-02,  1.94107466e-01],\n       [-3.40622437e-01, -1.39322393e-01],\n       [-1.13492608e-01,  1.05437920e-01],\n       [-6.39552493e-02,  2.44371702e-01],\n       [-2.99925697e-01, -1.16541674e-01],\n       [-2.60848014e-01, -4.78559667e-02],\n       [-3.23137294e-01, -2.07652675e-01],\n       [-1.64582588e-01,  9.68426954e-02],\n       [-1.72049671e-01,  3.53261080e-02],\n       [-9.49622383e-02,  1.70828403e-01],\n       [-2.62111852e-01, -6.75953019e-02],\n       [-1.80152267e-01,  7.59976082e-02],\n       [-2.20618804e-01,  5.84237606e-02],\n       [-1.35015023e-01,  8.21808402e-02],\n       [-2.33855646e-01,  3.68576899e-02],\n       [-2.55764093e-01, -7.67785815e-02],\n       [-2.07713387e-01,  1.11056840e-02],\n       [-3.06024517e-01, -5.72233606e-02],\n       [-2.47171048e-01, -3.03819296e-02],\n       [-3.12817885e-01, -9.10078303e-02],\n       [-2.18943570e-01,  2.32440422e-02],\n       [-3.24764505e-01, -1.10606877e-01],\n       [-3.01764891e-01, -9.57408539e-02],\n       [-1.31960468e-01,  1.51405441e-01],\n       [-2.52423963e-01, -5.88956445e-03],\n       [-2.48869988e-01,  2.87761125e-02],\n       [-2.44899626e-01, -4.07311378e-02],\n       [-8.34628090e-02,  2.42983466e-01],\n       [-1.03730613e-01,  2.08529365e-01],\n       [-2.88219544e-01,  1.33028008e-02],\n       [-4.67035204e-01, -2.98208266e-01],\n       [-1.79042376e-01,  1.06909515e-01],\n       [-2.63867207e-01,  3.70872467e-02],\n       [-2.25685235e-01, -2.37556116e-02],\n       [-1.62724863e-01,  1.12118435e-01],\n       [-3.44367801e-01, -1.28612606e-01],\n       [-1.67454351e-01,  8.07816129e-02],\n       [-2.61562817e-01, -3.14053081e-02],\n       [-1.69418827e-01,  1.04624187e-01],\n       [-1.34614191e-01,  1.40006025e-01],\n       [-4.29051279e-01, -2.47508470e-01],\n       [-1.38174491e-01,  1.09114219e-01],\n       [-2.99144867e-01, -6.62619705e-02],\n       [-2.95579028e-01, -3.37591492e-02],\n       [-3.18561486e-01, -9.73338407e-02],\n       [-3.61250904e-01, -1.15886729e-01],\n       [-3.32044882e-01, -6.11303887e-02],\n       [-1.57317658e-01,  1.18466784e-01],\n       [-3.09977928e-01, -4.52763818e-02],\n       [-1.00622226e-01,  2.19879905e-01],\n       [-3.51676939e-01, -6.48617573e-02],\n       [-2.23341311e-01,  8.31520413e-02],\n       [-3.69362695e-01, -1.71252965e-01],\n       [-3.06575565e-01, -3.52454069e-02],\n       [-2.40290065e-01,  6.05946290e-03],\n       [ 5.67066105e-02,  5.01645325e-01],\n       [-3.54483619e-01, -6.16218864e-02],\n       [-4.65709069e-01, -2.80369135e-01],\n       [-3.01121432e-01, -6.87607568e-02],\n       [-3.21471776e-01, -7.65152049e-02],\n       [-3.87699776e-01, -1.66021407e-01],\n       [-3.13322523e-01, -3.56992481e-02],\n       [-8.92380324e-02,  2.55526813e-01],\n       [ 8.98157600e-02,  4.92599725e-01],\n       [-3.76611450e-01, -1.40645833e-01],\n       [-1.86373370e-01,  1.66924362e-01],\n       [-1.16842412e-01,  2.40171317e-01],\n       [-1.55448349e-01,  1.48524219e-01],\n       [-3.25410462e-01, -7.13260785e-02],\n       [-8.71931257e-02,  2.69296075e-01],\n       [-3.04506372e-01, -5.96909591e-02],\n       [-3.47694704e-01, -3.21252583e-02],\n       [-2.92433178e-01, -3.69588888e-02],\n       [-2.65236978e-01, -1.40200422e-02],\n       [-3.51833789e-01, -8.83994140e-02],\n       [-2.56940587e-01,  2.74901625e-02],\n       [-3.56834903e-01, -1.83670120e-02],\n       [-3.43163744e-01, -7.03134315e-02],\n       [-4.45192325e-01, -1.95780000e-01],\n       [-3.50543041e-01, -5.52201131e-02],\n       [-1.31063595e-01,  2.52461026e-01],\n       [-2.31129012e-01,  7.73244945e-02],\n       [-3.29540858e-01, -4.31221618e-02],\n       [-1.41396698e-01,  1.85345975e-01],\n       [-3.30952653e-01,  6.93052200e-03],\n       [-2.48497842e-01,  7.50795021e-02],\n       [-3.31869221e-01, -1.84607241e-02],\n       [-3.32202777e-01, -4.26859944e-02],\n       [-1.76116955e-01,  1.80304151e-01],\n       [-3.73468537e-01, -1.13454422e-01],\n       [-2.89983513e-01,  7.71112224e-03],\n       [-2.65168411e-01,  2.57546493e-02],\n       [-2.15798217e-01,  1.12891243e-01]])\n```\n:::\n:::\n\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nexplained_variance = pca.explained_variance_ratio_\nprint(\"Explained variance ratio:\", explained_variance)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nExplained variance ratio: [0.83360005 0.1513503 ]\n```\n:::\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\npl.scatter(batter[:, 0], batter[:, 1])\npl.xlabel('Principal Component 1')\npl.ylabel('Principal Component 2')\npl.title('PCA Results')\npl.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-17-output-1.png){width=611 height=449}\n:::\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\ncomponent_loadings = pca.components_\nprint(\"Principal component loadings:\", component_loadings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPrincipal component loadings: [[ 0.65699203  0.48612356  0.57623377]\n [-0.5063218   0.85082336 -0.14049142]]\n```\n:::\n:::\n\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\nfrom sklearn.cluster import DBSCAN\nfrom sklearn.metrics import silhouette_score\n\n\n# Your data\nX = batter  # Your data points\n\nbest_eps = None\nbest_min_samples = None\nbest_score = -1\n\nfor eps in np.arange(0.1, 1.0, 0.1):  # Adjust the range as needed\n    for min_samples in range(2, 11):  # Adjust the range as needed\n        dbscan = DBSCAN(eps=eps, min_samples=min_samples)\n        labels = dbscan.fit_predict(X)\n        if len(set(labels)) > 1:  # Ensure more than one cluster is formed\n            score = silhouette_score(X, labels)\n            if score > best_score:\n                best_score = score\n                best_eps = eps\n                best_min_samples = min_samples\n\nprint(f\"Best eps: {best_eps}, Best min_samples: {best_min_samples}, Best Silhouette Score: {best_score}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nBest eps: 0.2, Best min_samples: 9, Best Silhouette Score: 0.6160671083676901\n```\n:::\n:::\n\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\nfrom sklearn.cluster import DBSCAN\n\n# Initialize DBSCAN\ndbscan = DBSCAN(eps=0.2, min_samples=2)\n\n# Fit DBSCAN on the PCA-transformed data\ncluster_labels = dbscan.fit_predict(batter)\n\n\npl.scatter(batter[:, 0], batter[:, 1], c=cluster_labels, cmap='viridis')\npl.xlabel('Principal Component 1')\npl.ylabel('Principal Component 2')\npl.title('DBSCAN Clustering Results')\npl.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-20-output-1.png){width=611 height=449}\n:::\n:::\n\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\n# Assuming 'player' contains the player names and 'cluster_labels' contains the cluster assignments\n# Create a new DataFrame to combine the results\nnew_batsman = pd.DataFrame({'x': batter[:, 0], 'y': batter[:, 1], 'cluster': cluster_labels, 'player': player})\n\n# Display the resulting DataFrame\nnew_batsman\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>y</th>\n      <th>cluster</th>\n      <th>player</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.036954</td>\n      <td>-0.269941</td>\n      <td>0</td>\n      <td>RT Ponting</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.120627</td>\n      <td>-0.212675</td>\n      <td>0</td>\n      <td>JH Kallis</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.972643</td>\n      <td>-0.241727</td>\n      <td>0</td>\n      <td>R Dravid</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.812778</td>\n      <td>-0.326137</td>\n      <td>0</td>\n      <td>AN Cook</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1.001332</td>\n      <td>-0.113314</td>\n      <td>0</td>\n      <td>KC Sangakkara</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>306</th>\n      <td>-0.176117</td>\n      <td>0.180304</td>\n      <td>0</td>\n      <td>CJL Rogers</td>\n    </tr>\n    <tr>\n      <th>307</th>\n      <td>-0.373469</td>\n      <td>-0.113454</td>\n      <td>0</td>\n      <td>KOA Powell</td>\n    </tr>\n    <tr>\n      <th>308</th>\n      <td>-0.289984</td>\n      <td>0.007711</td>\n      <td>0</td>\n      <td>AC Hudson</td>\n    </tr>\n    <tr>\n      <th>309</th>\n      <td>-0.265168</td>\n      <td>0.025755</td>\n      <td>0</td>\n      <td>KL Rahul</td>\n    </tr>\n    <tr>\n      <th>310</th>\n      <td>-0.215798</td>\n      <td>0.112891</td>\n      <td>0</td>\n      <td>DN Sardesai</td>\n    </tr>\n  </tbody>\n</table>\n<p>311 rows × 4 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\n# Create a scatter plot with cluster labels\npl.figure(figsize=(10, 6))\nax = sns.scatterplot(x=\"x\", y=\"y\", hue=\"cluster\", data=new_batsman, palette=\"viridis\", s=100)\n\n# Add labels for individual data points\nfor x, y, player, cluster in zip(new_batsman['x'], new_batsman['y'], new_batsman['player'], new_batsman['cluster']):\n    pl.text(x, y, player, fontsize=10, alpha=0.8)\n\n# Set the plot limits and labels\nax.set(ylim=(-3, 3))\npl.xlabel(\"Principal Component 1\", fontsize=15)\npl.ylabel(\"Principal Component 2\", fontsize=15)\n\n# Show the legend\npl.legend(title='Cluster', loc='upper right', labels=[f'Cluster {label}' for label in new_batsman['cluster'].unique()])\n\n# Display the plot\npl.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-22-output-1.png){width=837 height=515}\n:::\n:::\n\n\n::: {.cell execution_count=22}\n``` {.python .cell-code}\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\n\n# Set the style\nsns.set(style=\"white\")\n\n# Normalize the \"average\" values\nscaler = MinMaxScaler()\nbatsman['avg_normalized'] = scaler.fit_transform(batsman[['avg']])\n\n# Create a scatter plot with cluster labels and manually set marker size based on \"average\" values\nplt.figure(figsize=(10, 6))\nax = sns.scatterplot(x=\"x\", y=\"y\", hue=\"cluster\", data=new_batsman, palette=\"viridis\", sizes=(50, 500), size=batsman['avg_normalized'])\n\n# Add labels for individual data points\nfor x, y, player, cluster in zip(new_batsman['x'], new_batsman['y'], new_batsman['player'], new_batsman['cluster']):\n    plt.text(x, y, player, fontsize=10, alpha=0.8)\n\n# Set the plot limits and labels\nax.set(ylim=(-3, 3))\nplt.xlabel(\"Principal Component 1\", fontsize=15)\nplt.ylabel(\"Principal Component 2\", fontsize=15)\n\n# Show the legend\nplt.legend(title='Cluster', loc='best', labels=[f'Cluster {label}' for label in new_batsman['cluster'].unique()])\n\n# Display the plot\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-23-output-1.png){width=834 height=518}\n:::\n:::\n\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\n\n# Set the style\nsns.set(style=\"white\")\n\n# Normalize the \"average\" values\nscaler = MinMaxScaler()\nbatsman['100_normalized'] = scaler.fit_transform(batsman[['100']])\n\n# Create a scatter plot with cluster labels and manually set marker size based on \"average\" values\nplt.figure(figsize=(10, 6))\nax = sns.scatterplot(x=\"x\", y=\"y\", hue=\"cluster\", data=new_batsman, palette=\"viridis\", sizes=(50, 500), size=batsman['100_normalized'])\n\n# Add labels for individual data points\nfor x, y, player, cluster in zip(new_batsman['x'], new_batsman['y'], new_batsman['player'], new_batsman['cluster']):\n    plt.text(x, y, player, fontsize=10, alpha=0.8)\n\n# Set the plot limits and labels\nax.set(ylim=(-3, 3))\nplt.xlabel(\"Principal Component 1\", fontsize=15)\nplt.ylabel(\"Principal Component 2\", fontsize=15)\n\n# Show the legend\nplt.legend(title='Cluster', loc='upper right', labels=[f'Cluster {label}' for label in new_batsman['cluster'].unique()])\n\n# Display the plot\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-24-output-1.png){width=834 height=518}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}